<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SynCloud">

    <SolidColorBrush x:Key="color_softwhite">#FCFCFC</SolidColorBrush>
    <SolidColorBrush x:Key="color_abricot">#FFBD61</SolidColorBrush>
    <SolidColorBrush x:Key="color_darkabricot">#EFA134</SolidColorBrush>
    <SolidColorBrush x:Key="color_peach">#FFE5B4</SolidColorBrush>
    <SolidColorBrush x:Key="color_softblack">#1C1C1C</SolidColorBrush>
    <SolidColorBrush x:Key="color_grey2">#222222</SolidColorBrush>
    <SolidColorBrush x:Key="color_grey4">#444444</SolidColorBrush>
    <SolidColorBrush x:Key="color_greyD">#DDDDDD</SolidColorBrush>
    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="Icon_Light" TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="{StaticResource color_softwhite}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="True">
                <Setter Property="Fill" Value="{StaticResource color_greyD}"/>
            </DataTrigger>
            
        </Style.Triggers>
    </Style>
    <Style x:Key="Icon_Dark" TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="{StaticResource color_grey2}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver}" Value="True">
                <Setter Property="Fill" Value="{StaticResource color_grey4}"/>
            </DataTrigger>

        </Style.Triggers>
    </Style>


    <Style x:Key="BlockButton_Light" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource color_softwhite}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Foreground" Value="{StaticResource color_softblack}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="5" BorderThickness="0 3" BorderBrush="{StaticResource color_abricot}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource color_greyD}"/>
                <Setter Property="Foreground" Value="{StaticResource color_softblack}"/>

            </Trigger>
            
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BlockButton_Dark" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource color_grey2}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Foreground" Value="{StaticResource color_softwhite}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="5" BorderThickness="0 3" BorderBrush="{StaticResource color_abricot}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource color_grey4}"/>
                <Setter Property="Foreground" Value="{StaticResource color_softwhite}"/>

            </Trigger>

            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
</ResourceDictionary>